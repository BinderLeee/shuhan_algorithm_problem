巴比伦塔
#### 链接：https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=378
#### 难度：提高+
#### tags：DAG上的DP
**嵌套矩形的加强题目。
对于每一个方块(a,b,c)有三种底面(a,b),(a,c),(b,c)，因此可以将每个方块拆分成三种面。
剩下的步骤就和嵌套矩形一样：可放置关系是一个二元关系，因此如果(a,b),(c,d)中a<c && b<d就从(a,b)向(c,d)连一条边，这个问题就转化为DAG求最长路的问题。
DAG求最长路:f[i]是从i出发的所有路径中的最大路径值, f[i]=max(f[i],f[j]+w[i][j]) (j是所有从i可到达的点:i->j)


方格取数
#### 链接：https://www.acwing.com/problem/content/1029/
#### 难度：提高
#### tags：DP
**两个人同时走模型(瞎取的QAQ)
走两遍可以转化为两个人同时从起点开始走到终点为止。设两个人的坐标为(i1,j1),(i2,j2),于是状态就可以表示为f(i1,j1,i1,j2)
可以将四维状态优化为三维状态:设k是两人同时走的步数，于是j1=k-i1, j2=k-i2.于是状态就可以表示为f(k,i1,i2)
f(k,i1,i2)表示两人同时走k步同时第一人在(i1,k-i1),第二人在(i2,k-i2)的所有方案中数值总和最大
状态转移有四种情况
  2v           1v2v     1v 
1->x   1->2->x   x    2->x
因此状态转移方程为：
x = max(x, f[k-1][i1-1][i2]+t);
x = max(x, f[k-1][i1][i2-1]+t);
x = max(x, f[k-1][i1][i2]+t);
x = max(x, f[k-1][i1-1][i2-1]+t);
到此还有最后一个问题，如果两个人同时走到同一个格子上，我们只能加一次格子上的数值。这里我们可以直接特判(i1==i2)判断是否在同一个格子上。


传纸条
#### 链接：https://www.acwing.com/problem/content/description/277/
#### 难度：提高
#### tags：DP
**两个人同时走模型
和方格取数基本一样，一来一回同样可以看作两个人同时走模型，代码部分也与方格取数基本一致，当然要注意在这一道题中"两个人"不能走到同一个格子(终点起点除外)，而不是只取一次数
